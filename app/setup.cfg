[flake8]
# flake8 configuration:
# https://flake8.pycqa.org/en/latest/user/configuration.html
show-source = true
count = True
color=always
statistics = false
doctests = false
enable-extensions = G

# Flake plugins:
max-line-length = 120
max-complexity = 7
max-imports = 14

# Excluding some directories:
exclude = .git,__pycache__,.venv,.eggs,*.egg,frontend,landing,*/migrations/*


# Disable some pydocstyle checks:
ignore = D100, D101, D102, D103, D104, D106, D401, X100, W503, W504, RST303, RST304, DAR103, DAR203, C901, PT006

# Docs: https://github.com/snoack/flake8-per-file-ignores
# You can completely or partially disable our custom checks,
# to do so you have to ignore `WPS` letters for all python files:
per-file-ignores =
    # Allow `__init__.py` with logic for configuration:
    app/settings/*.py: WPS226, WPS407, WPS412, WPS432
    # Tests have some more freedom:
    tests/*.py: S101, WPS201, WPS202, WPS218, WPS226, WPS436, WPS442
    apps.py:F401
    */management/*: T20


[tool:pytest]
DJANGO_SETTINGS_MODULE = app.settings

python_files = test_*.py *_tests.py tests/*

# Strict `@xfail` by default:
xfail_strict = true

# Directories that are not visited by pytest collector:
norecursedirs = *.egg .eggs dist build docs .tox .git __pycache__ frontend landing

addopts =
    -m "not slow"

filterwarnings =

    ignore::DeprecationWarning
    ignore::UserWarning
    ignore::RuntimeWarning

    ; ignore::django.utils.deprecation.RemovedInDjango50Warning
    ignore::django.utils.deprecation.RemovedInDjango51Warning
    # Some dependencies have deprecation warnings, we don't want to see them,
    # but, we want to list them here:
    ignore::DeprecationWarning:password_reset.*:
    ignore::DeprecationWarning:pytest_freezegun:
    ignore::DeprecationWarning

markers =
    slow

[mypy]
# Mypy configuration:
# https://mypy.readthedocs.io/en/latest/config_file.html
enable_error_code =
    truthy-bool,
    truthy-iterable,
    redundant-expr,
    unused-awaitable,
    ignore-without-code,
    possibly-undefined,
    redundant-self,

exclude = (?x)(
    ^manage.py$
    )

extra_checks = true

disable_error_code =
    literal-required,

enable_incomplete_feature =
    Unpack,

allow_redefinition = false
check_untyped_defs = true
disallow_untyped_decorators = true
disallow_any_explicit = false
disallow_any_generics = true
disallow_untyped_calls = true
disallow_incomplete_defs = true
explicit_package_bases = true
ignore_errors = false
ignore_missing_imports = true
implicit_reexport = false
local_partial_types = true
strict_optional = true
strict_equality = true
no_implicit_optional = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unreachable = true
warn_no_return = true

plugins =
    mypy_django_plugin.main,
    pydantic.mypy

[mypy-server.apps.*.migrations.*]
# Django migrations should not produce any errors (they are tested anyway):
ignore_errors = true

[mypy-users.*]
ignore_errors = true


[mypy.plugins.django-stubs]
# Docs: https://github.com/typeddjango/django-stubs
django_settings_module = app.settings
strict_settings = false

[tool.black]
line-length = 120
target-version = ['py3']
skip-string-normalization = true